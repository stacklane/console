@import "/style/variables";

///////

@import "/bulma/utilities/all";

@import "/bulma/base/_all";

@import "/bulma/elements/box";
@import "/bulma/elements/button";
@import "/bulma/elements/container";
@import "/bulma/elements/form";
@import "/bulma/elements/icon";
@import "/bulma/elements/image";
@import "/bulma/elements/notification";
@import "/bulma/elements/tag";
@import "/bulma/elements/title";
@import "/bulma/elements/table";

@import "/bulma/components/card";
@import "/bulma/components/dropdown";
@import "/bulma/components/media";
@import "/bulma/components/navbar";
@import "/bulma/components/tabs";
@import "/bulma/components/message";
@import "/bulma/components/level";

@import "/bulma/grid/columns";

////////

@import "/style/ext/tooltip";
@import "/style/ext/pricing";

@import "/js/app/hiding";
@import "/js/app/form";
@import "/js/app/message";
@import "/js/app/progress";
@import "/js/app/tabs";
@import "/js/app/filter";
@import "/js/app/get";
@import "/js/app/stripe-card";

////////////

@import "/style/prism";
@import "/style/toggler";

////////////

/**
 * header
 */
header {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: $zindex-sticky;

  .navbar{
    box-shadow: $shadow;

    /**
     * Provide same svg 'fill' as text 'color'
     * Meaning: we want svg's to have same color as the text.
     */
    @each $name, $pair in $colors {
      $color-invert: nth($pair, 2);
      &.is-#{$name} {
        fill: $color-invert !important;
      }
    }

    /**
     * <span class='icon'>...</span>
     * <span>text</span>
     * ensures spacing between the two
     */
    a.navbar-item>.icon:not(:last-child) {
      margin-left: -.25em;
      margin-right: .25em;
    }
  }
}

/**
 * main
 */
main{
  padding-top: 1rem;
}
/**
 * main > .is-capped -- is pulled up to be snug with <main>
 */
main > .is-capped /*:first-child*/{
  margin-top: -1rem;
  border-top: none;
  border-top-left-radius: 0px;
  border-top-right-radius: 0px;
}


/**
 * .fade
 * .fade.show
 *
 * Full opacity toggle with transition

$transition-fade:  opacity .15s linear !default;
.fade {
  opacity: 0;
  transition: $transition-fade;

  &.show {
    opacity: 1;
  }
}*/

/**
 * .container
 */
.container{
  padding-left: 12px;
  padding-right: 12px;
}
@include tablet(){
  padding-left: 15px;
  padding-right: 15px;
}

/**
 * .icon > .svg
 */
.icon > svg{
  width: 100%;
  height: 100%;
}
.media-left > .icon {
  /**
   * Typical case is a *single* icon in media-left (only element),
   * and block is working much better than inline-block in that case at
   * not adding some unexpected spacing. flex might also work.
   */
  display: block;
}

/**
 * .icon > svg .has-text-X variations
 *
 * Adapted from bulma logic for .has-text-X
 */
@each $name, $shade in $shades {
  .has-text-#{$name} .icon > svg, .has-text-#{$name}.icon > svg{
    fill: $shade !important;
  }
}
@each $name, $pair in $colors { //
  $color: nth($pair, 1);

  .has-text-#{$name} .icon > svg, .has-text-#{$name}.icon > svg{
    fill: $color !important;
  }
}
a:hover .has-text-link.icon > svg{
  fill: $link-hover !important;
}

/**
 * Make an input look like surrounding text

 * Recommend:
   autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" data-gramm="false"

   and readonly
    as needed.
 */
input{
  &.is-display {
    font-size: inherit;
    font-weight: inherit;
    padding: 0px;
    border: 0px;
    display: inline-block;
    min-width: 50%; // TBD

    /* don't like how this looks:
    &.is-editable {
      background-size: .9rem;
      background: url(/image/edit_gray.svg) no-repeat center left;
      padding-left: 1.5rem;
    }
    &.is-editable:focus{
      //text-decoration:underline;
    }*/
  }
}

/**
 * .is-revealable / .is-revealer
 */
.is-revealer:hover .is-revealed{
  visibility: visible;
}
.is-revealed{
  visibility: hidden;
}

/**
 * .card
 */
.card{
  border-radius: $card-radius;
}

/**
 * a.card use is-block instead
 */
//a.card{
 // display:block;
//}

/**
 * .card-functions
 */
.card-content + .card-functions{
  position: absolute;
  /** == .card-content padding **/
  right: 1.5rem;
  top: 1.5rem;
}

/**
 * .is-hoverable
 */
$hoverable-transition: box-shadow .2s ease-in-out;
$hoverable-shadow: $card-shadow-hover;
.is-hoverable, a.box /* override */, a.card /* make consistent with a.box */{
  //display:block; // Use is-block as needed instead
  //text-decoration: none !important;
  transition: $hoverable-transition;
  will-change: box-shadow;

  &:hover, &:focus, &:active{
    box-shadow: $hoverable-shadow;
  }

  &[disabled]{
    pointer-events: none !important; // Disables hovering and clicking.
  }
}

/**
 * .card-footer.is-small
 */
.card-footer.is-small{
  border-top: 1px solid rgba(0,0,0,0.05);
  margin-left: .5rem;
  margin-right: .5rem;
  padding: 0.1rem;
}

/**
 * .is-proposed
 *
 * A kind of virtual card -- a card that could be, usually for "add/new".
 */
$proposed-transition: opacity .2s ease-in-out;
.is-proposed{
  opacity: .6;
  border: 1px rgba(0,0,0,.2) dashed;
  transition: $proposed-transition;
  will-change: opacity;

  &:hover{
    opacity: 1;
  }
}
.is-proposed.is-hoverable{
  transition: $hoverable-transition, $proposed-transition;
  will-change: opacity, box-shadow;
}

/**
 * a.box
 */

/**
 * .box.is-spacious
 *
 * Typically for a full page .box, usually with .is-capped
 */
.box.is-spacious{
  /*position: relative;*/
  padding: 32px;
}
@include tablet(){
  .box.is-spacious {
    padding: 80px 40px;
  }
}

/**
 * .box-card (a variation of thoughts from .box and .media)
 *
 * Designed specifically to have .box-card-content be a link,
 * YET still let further actions within box-card-right/left be clicked.
 */
.box-card{
  // .box
  @include block;
  background-color: $box-background-color;
  border-radius: $box-radius;
  box-shadow: $box-shadow;
  color: $box-color;
  display: block;
  // leave padding to inner elements: padding: $box-padding;

  // .media
  align-items: flex-start;
  display: flex;
  text-align: left;
}
.box-card-left,
.box-card-right {
  flex-basis: auto;
  flex-grow: 0;
  flex-shrink: 0;
  padding: $box-padding;
}
.box-card-left {
  margin-right: 1rem;
  padding-right: 0rem;
}
.box-card-right {
  margin-left: 1rem;
  padding-left: 0rem;
}
.box-card-content {
  padding: $box-padding;
  flex-basis: auto;
  flex-grow: 1;
  flex-shrink: 1;
  text-align: left;
}
